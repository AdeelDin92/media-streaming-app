{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Desktop\\\\media-streaming-app\\\\media_frontend\\\\src\\\\components\\\\MediaPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaPlayer({\n  file\n}) {\n  _s();\n  const [mediaUrl, setMediaUrl] = useState(null);\n  useEffect(() => {\n    if (file) {\n      const url = URL.createObjectURL(file);\n      setMediaUrl(url);\n      return () => {\n        URL.revokeObjectURL(url); // Clean up the object URL to free memory\n      };\n    } else {\n      setMediaUrl(null);\n    }\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-player\",\n    children: file ? file.type.startsWith('video/') && (file.type === 'video/mp4' || file.type === 'video/webm' || file.type === 'video/ogg') ? /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video-player\",\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: mediaUrl,\n        type: file.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this) : file.type.startsWith('audio/') ? /*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"audio-player\",\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: mediaUrl,\n        type: file.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), \"Your browser does not support the audio tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unsupported file type. Please upload .mp4, .webm, .ogg, or audio files.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a video or audio file to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaPlayer, \"mTtmLhO5TcgPzy7SzmJIvcnQ1B0=\");\n_c = MediaPlayer;\nexport default MediaPlayer;\nvar _c;\n$RefreshReg$(_c, \"MediaPlayer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MediaPlayer","file","_s","mediaUrl","setMediaUrl","url","URL","createObjectURL","revokeObjectURL","className","children","type","startsWith","controls","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Addy/OneDrive/Desktop/media-streaming-app/media_frontend/src/components/MediaPlayer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../style.css';\r\n\r\nfunction MediaPlayer({ file }) {\r\n  const [mediaUrl, setMediaUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (file) {\r\n      const url = URL.createObjectURL(file);\r\n      setMediaUrl(url);\r\n\r\n      return () => {\r\n        URL.revokeObjectURL(url); // Clean up the object URL to free memory\r\n      };\r\n    } else {\r\n      setMediaUrl(null);\r\n    }\r\n  }, [file]);\r\n\r\n  return (\r\n    <div className=\"media-player\">\r\n      {file ? (\r\n        file.type.startsWith('video/') && (file.type === 'video/mp4' || file.type === 'video/webm' || file.type === 'video/ogg') ? (\r\n          <video className=\"video-player\" controls>\r\n            <source src={mediaUrl} type={file.type} />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        ) : file.type.startsWith('audio/') ? (\r\n          <audio className=\"audio-player\" controls>\r\n            <source src={mediaUrl} type={file.type} />\r\n            Your browser does not support the audio tag.\r\n          </audio>\r\n        ) : (\r\n          <p>Unsupported file type. Please upload .mp4, .webm, .ogg, or audio files.</p>\r\n        )\r\n      ) : (\r\n        <p>Select a video or audio file to play.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MediaPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAIK,IAAI,EAAE;MACR,MAAMI,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MACrCG,WAAW,CAACC,GAAG,CAAC;MAEhB,OAAO,MAAM;QACXC,GAAG,CAACE,eAAe,CAACH,GAAG,CAAC,CAAC,CAAC;MAC5B,CAAC;IACH,CAAC,MAAM;MACLD,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BT,IAAI,GACHA,IAAI,CAACU,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,KAAKX,IAAI,CAACU,IAAI,KAAK,WAAW,IAAIV,IAAI,CAACU,IAAI,KAAK,YAAY,IAAIV,IAAI,CAACU,IAAI,KAAK,WAAW,CAAC,gBACtHZ,OAAA;MAAOU,SAAS,EAAC,cAAc;MAACI,QAAQ;MAAAH,QAAA,gBACtCX,OAAA;QAAQe,GAAG,EAAEX,QAAS;QAACQ,IAAI,EAAEV,IAAI,CAACU;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAE5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,GACNjB,IAAI,CAACU,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,gBAChCb,OAAA;MAAOU,SAAS,EAAC,cAAc;MAACI,QAAQ;MAAAH,QAAA,gBACtCX,OAAA;QAAQe,GAAG,EAAEX,QAAS;QAACQ,IAAI,EAAEV,IAAI,CAACU;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAE5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,gBAERnB,OAAA;MAAAW,QAAA,EAAG;IAAuE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9E,gBAEDnB,OAAA;MAAAW,QAAA,EAAG;IAAqC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CArCQF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}